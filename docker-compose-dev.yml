version: "3.9"
services:

  client-react-vite:
    #  Vite as the development server.
    image: client-react-vite
    build:
      context: ./client-react/
      dockerfile: ./client-react/Dockerfile.vite
    init: true
    # bind for live updates in any of the source code files
    volumes:
      - type: bind
        source: ./client-react/
        target: /usr/src/app/
        # Avoid bringing the node_modules from the host filesystem, basically rewriting the node_modules folder to useonly the ones inside the container
      - type: volume
        target: /usr/src/app/node_modules 
      - type: bind
        source: ./vite.config.js
        target: /usr/src/app/vite.config.js
    networks:
      - frontend
    ports:
      - 5173:5173


  api-node:
    image: api-node
    # target only the dev stage because this compose is just for development purposes
    build:
      context: ./api-node/
      dockerfile: ./api-node/Dockerfile
      target: dev 
    init: true
    volumes:
      - type: bind
        source: ./api-node/
        target: /usr/src/app/
      - type: volume
        target: /usr/src/app/node_modules 
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
    networks:
      - frontend
      - backend  
    ports:
      - 3000:3000
    restart: unless-stopped


  api-golang:
    image: api-golang
    build:
      context: ./api-golang/
      dockerfile: ./api-golang/Dockerfile
      target: dev
    init: true
    volumes:
      - type: bind
        source: ./api-golang/
        target: /app/
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
    networks:
      - frontend
      - backend
    ports:
      - 8080:8080
    restart: unless-stopped


  db:
    image: postgres:17.0-alpine3.19
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=foobarbaz
    networks:
      - backend
    ports:
      - 5432:5432


volumes:
  pgdata:

  
networks:
  frontend:
  backend:
